# EdgeLake MCP Tools Configuration
# This file defines the MCP tools dynamically based on EdgeLake commands from member_cmd.py
#
# Testing Mode:
#   Set 'testing: true' to enable detailed debug logging for tool execution.
#   When enabled, logs will show:
#     - Tool entry with input arguments
#     - Built command sent to member_cmd.process_cmd()
#     - Raw output from member_cmd
#     - Final formatted response sent to MCP client
#   Default: false (not present = false)
#   Usage: Add 'testing: true' at the top level to enable globally

version: "1.0"

# Enable testing mode (optional, defaults to false)
# testing: true

tools:
  # Database Discovery Tools
  - name: list_databases
    description: "List all available databases in EdgeLake. Use this to discover what databases are available before querying."
    edgelake_command:
      type: "get"
      method: "blockchain_table"
      template: "blockchain get table bring.json"
      # Response extraction using JSONPath
      response_parser:
        type: "jsonpath"
        description: "Extract unique database names from blockchain table response"
        extract_path: "$[*].table.dbms"
        unique: true
        sort: true
    input_schema:
      type: object
      properties: {}
      required: []

  - name: list_tables
    description: "List all tables in a specific database. Use this to discover what tables are available in a database before querying."
    edgelake_command:
      type: "get"
      method: "blockchain_table"
      template: "blockchain get table bring.json"
      # Response extraction using JSONPath
      response_parser:
        type: "jsonpath"
        description: "Extract table names for a specific database from blockchain table response"
        extract_path: "$[*].table"
        # Filter by dbms field matching 'database' argument, then extract 'name' field
        filter:
          field: "dbms"
          source: "argument"
          argument: "database"
        map: "name"
    input_schema:
      type: object
      properties:
        database:
          type: string
          description: "Database name to list tables from"
      required: ["database"]
  
  - name: get_schema
    description: "Get the schema (column definitions) for a specific table. Use this to understand what columns are available before querying."
    edgelake_command:
      type: "get"
      method: "columns"
      template: 'get columns where dbms="{database}" and table="{table}" and format=json'
    input_schema:
      type: object
      properties:
        database:
          type: string
          description: "Database name"
        table:
          type: string
          description: "Table name"
      required: ["database", "table"]
  
  # Query Execution Tool
  - name: query
    description: "Execute distributed SQL query across EdgeLake network with advanced filtering, grouping, and ordering options"
    edgelake_command:
      type: "sql"
      method: "query"
      build_sql: true
      headers:
        destination: "network"
      # Response extraction using JSONPath
      response_parser:
        type: "jsonpath"
        description: "Extract query results array from EdgeLake response"
        extract_path: "$.Query[*]"
    input_schema:
      type: object
      properties:
        database:
          type: string
          description: "Database name to query"
        table:
          type: string
          description: "Table name to query"
        select:
          type: array
          items:
            type: string
          description: "Columns to select (default: all columns with *)"
          default: ["*"]
        where:
          type: string
          description: "WHERE clause conditions (e.g., 'is_active = true AND age > 18'). Supports AND/OR operators"
        group_by:
          type: array
          items:
            type: string
          description: "Columns to group by (required when using aggregations with non-aggregated columns)"
        order_by:
          type: array
          items:
            type: object
            properties:
              column:
                type: string
              direction:
                type: string
                enum: ["ASC", "DESC"]
                default: "ASC"
            required: ["column"]
          description: "Order results by columns with optional ASC/DESC direction"
        limit:
          type: integer
          description: "Maximum number of rows to return"
          minimum: 1
          default: 100
      required: ["database", "table"]

  # Node Status Tool
  - name: node_status
    description: "Get the status and health information of the EdgeLake node"
    edgelake_command:
      type: "get"
      method: "status"
      template: "get status"
    input_schema:
      type: object
      properties: {}
      required: []
  
  # Server Info Tool
  - name: server_info
    description: "Get EdgeLake MCP Server version and configuration information"
    edgelake_command:
      type: "internal"
      method: "server_info"
    input_schema:
      type: object
      properties: {}
      required: []
